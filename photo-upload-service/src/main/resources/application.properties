spring.application.name=photo-upload-service
server.port=8082

cloudinary.cloud_name=dcj4nawlm
cloudinary.api_key=294646767671483
cloudinary.api_secret=ULWtDZleGkb4tspYx6xs7ck18ow
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=2MB
spring.servlet.multipart.max-request-size=10MB

# RabbitMQ Configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# Additional RabbitMQ Configuration for Photo Upload Service
photo.upload.exchange=photo_upload_exchange
photo.upload.routing-key=photo_uploaded
photo.upload.queue=photo_upload_queue

#Delete photo, direct exchange
delete.photo.queue=delete_photo_queue
delete.photo.exchange=delete_photo_exchange
delete.photo.routing-key=delete_photo_routing_key

# Optional: Dead Letter Exchange and Queue Configuration (if interacting directly with DLQ)
#photo.management.dlx=dlx_exchange
#photo.management.dlq=photo_upload_dead_letter_queue


