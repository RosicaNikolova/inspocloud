spring.application.name=api-gateway
server.port=8083

#spring.cloud.gateway.routes[0].id=photo-management-service
#spring.cloud.gateway.routes[0].uri=http://localhost:8081
#spring.cloud.gateway.routes[0].predicates[0]=Path=/api/photo/**
#
#spring.cloud.gateway.routes[1].id=photo-upload-service
#spring.cloud.gateway.routes[1].uri=http://localhost:8082
#spring.cloud.gateway.routes[1].predicates[0]=Path=/api/upload/**
#
#spring.cloud.gateway.routes[2].id=auth-service
#spring.cloud.gateway.routes[2].uri=http://localhost:8084
#spring.cloud.gateway.routes[2].predicates[0]=Path=/api/auth/**
#
#spring.cloud.gateway.routes[3].id=user-management-service
#spring.cloud.gateway.routes[3].uri=http://localhost:8085
#spring.cloud.gateway.routes[3].predicates[0]=Path=/api/user/**


spring.cloud.gateway.routes[0].id=photo-management-service
spring.cloud.gateway.routes[0].uri=http://photo-management-service.default.svc.cluster.local:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/photo/**

spring.cloud.gateway.routes[1].id=photo-upload-service
spring.cloud.gateway.routes[1].uri=http://photo-upload-service.default.svc.cluster.local:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/upload/**


spring.cloud.gateway.routes[2].id=auth-service
spring.cloud.gateway.routes[2].uri=http://auth-service.default.svc.cluster.local:8084
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/auth/**

spring.cloud.gateway.routes[3].id=user-management
spring.cloud.gateway.routes[3].uri=http://user-management.default.svc.cluster.local:8085
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/user/**

spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:3000
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH,HEAD,TRACE,CONNECT
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true



spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/inspocloud/protocol/openid-connect/certs
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/inspocloud

#Keycloak configuration
#keycloak.auth-server-url=http://localhost:8080
#keycloak.realm=inspocloud
#keycloak.resource=inspocloud
#keycloak.credentials.secret=pJ2UfRApXmHzKfk2WCLTrAKya9SOrziD
#keycloak.principal-attribute=preferred_username


